// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetSessionData, GetSessionResponses, GetSessionErrors, GetManySessionsData, GetManySessionsResponses, GetManySessionsErrors, CreateSessionData, CreateSessionResponses, CreateSessionErrors, UpdateSessionAnswerData, UpdateSessionAnswerResponses, UpdateSessionAnswerErrors, FinishSessionData, FinishSessionResponses, FinishSessionErrors, GetQuizDetailedData, GetQuizDetailedResponses, GetQuizDetailedErrors, GetQuizPreviewData, GetQuizPreviewResponses, GetQuizPreviewErrors, ListQuizesData, ListQuizesResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class Session {
    /**
     * Get Session
     */
    public static getSession<ThrowOnError extends boolean = false>(options: Options<GetSessionData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetSessionResponses, GetSessionErrors, ThrowOnError>({
            url: '/sessions/{session_id}',
            ...options
        });
    }
    
    /**
     * Get Many Sessions
     */
    public static getManySessions<ThrowOnError extends boolean = false>(options: Options<GetManySessionsData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetManySessionsResponses, GetManySessionsErrors, ThrowOnError>({
            url: '/sessions',
            ...options
        });
    }
    
    /**
     * Create Session
     */
    public static createSession<ThrowOnError extends boolean = false>(options: Options<CreateSessionData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CreateSessionResponses, CreateSessionErrors, ThrowOnError>({
            url: '/sessions/',
            ...options
        });
    }
    
    /**
     * Update Session Answer
     */
    public static updateSessionAnswer<ThrowOnError extends boolean = false>(options: Options<UpdateSessionAnswerData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<UpdateSessionAnswerResponses, UpdateSessionAnswerErrors, ThrowOnError>({
            url: '/sessions/{session_id}/answers/{answer_index}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Finish Session
     */
    public static finishSession<ThrowOnError extends boolean = false>(options: Options<FinishSessionData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<FinishSessionResponses, FinishSessionErrors, ThrowOnError>({
            url: '/sessions/{session_id}/finish',
            ...options
        });
    }
}

export class Quiz {
    /**
     * Get Quiz Detailed
     */
    public static getQuizDetailed<ThrowOnError extends boolean = false>(options: Options<GetQuizDetailedData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetQuizDetailedResponses, GetQuizDetailedErrors, ThrowOnError>({
            url: '/quizes/detailed/{quiz_id}',
            ...options
        });
    }
    
    /**
     * Get Quiz Preview
     */
    public static getQuizPreview<ThrowOnError extends boolean = false>(options: Options<GetQuizPreviewData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetQuizPreviewResponses, GetQuizPreviewErrors, ThrowOnError>({
            url: '/quizes/preview/{quiz_id}',
            ...options
        });
    }
    
    /**
     * List Quizes
     */
    public static listQuizes<ThrowOnError extends boolean = false>(options?: Options<ListQuizesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<ListQuizesResponses, unknown, ThrowOnError>({
            url: '/quizes',
            ...options
        });
    }
}