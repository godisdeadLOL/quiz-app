// This file is auto-generated by @hey-api/openapi-ts

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

export type QuestionAnswer = Array<number>;

/**
 * QuestionFeedback
 */
export type QuestionFeedback = {
    current_answer: QuestionAnswer;
    right_answer: QuestionAnswer;
    /**
     * Score
     */
    score: number;
    /**
     * Score Max
     */
    score_max: number;
    /**
     * Comment
     */
    comment: string;
};

/**
 * QuestionOption
 */
export type QuestionOption = {
    /**
     * Description
     */
    description: string;
};

/**
 * QuestionPublic
 */
export type QuestionPublic = {
    /**
     * Description
     */
    description: string;
    /**
     * Options
     */
    options: Array<QuestionOption>;
    /**
     * Mode
     */
    mode: 'single' | 'multiple';
};

/**
 * QuizDetailed
 */
export type QuizDetailed = {
    /**
     * Id
     */
    id: string;
    /**
     * Title
     */
    title: string;
    /**
     * Description
     */
    description: string;
    /**
     * Questions
     */
    questions: Array<QuestionPublic>;
};

/**
 * QuizFeedback
 */
export type QuizFeedback = {
    /**
     * Questions
     */
    questions: Array<QuestionFeedback>;
    /**
     * Score
     */
    score: number;
    /**
     * Score Max
     */
    score_max: number;
};

/**
 * QuizPreview
 */
export type QuizPreview = {
    /**
     * Id
     */
    id: string;
    /**
     * Title
     */
    title: string;
    /**
     * Description
     */
    description: string;
};

/**
 * QuizSessionDetailed
 */
export type QuizSessionDetailed = {
    /**
     * Id
     */
    id: string;
    /**
     * Quiz Id
     */
    quiz_id: string;
    /**
     * Created At
     */
    created_at: number;
    /**
     * Duration
     */
    duration: number | null;
    /**
     * Is Expired
     */
    is_expired: boolean;
    /**
     * Is Finished
     */
    is_finished: boolean;
    /**
     * Answers
     */
    answers: Array<QuestionAnswer>;
    feedback: QuizFeedback | null;
};

/**
 * QuizSessionPreview
 */
export type QuizSessionPreview = {
    /**
     * Id
     */
    id: string;
    /**
     * Quiz Id
     */
    quiz_id: string;
    /**
     * Created At
     */
    created_at: number;
    /**
     * Duration
     */
    duration: number | null;
    /**
     * Is Expired
     */
    is_expired: boolean;
    /**
     * Is Finished
     */
    is_finished: boolean;
};

/**
 * QuizSessionSecure
 */
export type QuizSessionSecure = {
    /**
     * Id
     */
    id: string;
    /**
     * Quiz Id
     */
    quiz_id: string;
    /**
     * Created At
     */
    created_at: number;
    /**
     * Duration
     */
    duration: number | null;
    /**
     * Is Expired
     */
    is_expired: boolean;
    /**
     * Is Finished
     */
    is_finished: boolean;
    /**
     * Answers
     */
    answers: Array<QuestionAnswer>;
    feedback: QuizFeedback | null;
    /**
     * Key
     */
    key: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type GetSessionData = {
    body?: never;
    headers: {
        /**
         * X-Session-Key
         */
        'x-session-key': string;
    };
    path: {
        /**
         * Session Id
         */
        session_id: string;
    };
    query?: never;
    url: '/sessions/{session_id}';
};

export type GetSessionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSessionError = GetSessionErrors[keyof GetSessionErrors];

export type GetSessionResponses = {
    /**
     * Successful Response
     */
    200: QuizSessionDetailed;
};

export type GetSessionResponse = GetSessionResponses[keyof GetSessionResponses];

export type GetManySessionsData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Ids
         */
        ids: Array<string>;
    };
    url: '/sessions';
};

export type GetManySessionsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetManySessionsError = GetManySessionsErrors[keyof GetManySessionsErrors];

export type GetManySessionsResponses = {
    /**
     * Response Getmanysessions
     * Successful Response
     */
    200: Array<QuizSessionPreview>;
};

export type GetManySessionsResponse = GetManySessionsResponses[keyof GetManySessionsResponses];

export type CreateSessionData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Quiz Id
         */
        quiz_id: string;
    };
    url: '/sessions/';
};

export type CreateSessionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSessionError = CreateSessionErrors[keyof CreateSessionErrors];

export type CreateSessionResponses = {
    /**
     * Successful Response
     */
    200: QuizSessionSecure;
};

export type CreateSessionResponse = CreateSessionResponses[keyof CreateSessionResponses];

export type UpdateSessionAnswerData = {
    body: QuestionAnswer;
    headers: {
        /**
         * X-Session-Key
         */
        'x-session-key': string;
    };
    path: {
        /**
         * Session Id
         */
        session_id: string;
        /**
         * Answer Index
         */
        answer_index: number;
    };
    query?: never;
    url: '/sessions/{session_id}/answers/{answer_index}';
};

export type UpdateSessionAnswerErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateSessionAnswerError = UpdateSessionAnswerErrors[keyof UpdateSessionAnswerErrors];

export type UpdateSessionAnswerResponses = {
    /**
     * Successful Response
     */
    200: QuizSessionDetailed;
};

export type UpdateSessionAnswerResponse = UpdateSessionAnswerResponses[keyof UpdateSessionAnswerResponses];

export type FinishSessionData = {
    body?: never;
    headers: {
        /**
         * X-Session-Key
         */
        'x-session-key': string;
    };
    path: {
        /**
         * Session Id
         */
        session_id: string;
    };
    query?: never;
    url: '/sessions/{session_id}/finish';
};

export type FinishSessionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type FinishSessionError = FinishSessionErrors[keyof FinishSessionErrors];

export type FinishSessionResponses = {
    /**
     * Successful Response
     */
    200: QuizSessionDetailed;
};

export type FinishSessionResponse = FinishSessionResponses[keyof FinishSessionResponses];

export type GetQuizDetailedData = {
    body?: never;
    headers: {
        /**
         * X-Session-Key
         */
        'x-session-key': string;
    };
    path: {
        /**
         * Quiz Id
         */
        quiz_id: string;
    };
    query?: never;
    url: '/quizes/detailed/{quiz_id}';
};

export type GetQuizDetailedErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetQuizDetailedError = GetQuizDetailedErrors[keyof GetQuizDetailedErrors];

export type GetQuizDetailedResponses = {
    /**
     * Successful Response
     */
    200: QuizDetailed;
};

export type GetQuizDetailedResponse = GetQuizDetailedResponses[keyof GetQuizDetailedResponses];

export type GetQuizPreviewData = {
    body?: never;
    path: {
        /**
         * Quiz Id
         */
        quiz_id: string;
    };
    query?: never;
    url: '/quizes/preview/{quiz_id}';
};

export type GetQuizPreviewErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetQuizPreviewError = GetQuizPreviewErrors[keyof GetQuizPreviewErrors];

export type GetQuizPreviewResponses = {
    /**
     * Successful Response
     */
    200: QuizPreview;
};

export type GetQuizPreviewResponse = GetQuizPreviewResponses[keyof GetQuizPreviewResponses];

export type ListQuizesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/quizes';
};

export type ListQuizesResponses = {
    /**
     * Response Listquizes
     * Successful Response
     */
    200: Array<QuizPreview>;
};

export type ListQuizesResponse = ListQuizesResponses[keyof ListQuizesResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};