// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { CreateSessionData, CreateSessionResponses, ResolveSessionData, ResolveSessionResponses, SetSessionAnswerData, SetSessionAnswerResponses, FinishSessionData, FinishSessionResponses, ListQuizesData, ListQuizesResponses, GetQuizData, GetQuizResponses, GetQuizErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class Session {
    public static createSession<ThrowOnError extends boolean = false>(options: Options<CreateSessionData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CreateSessionResponses, unknown, ThrowOnError>({
            url: '/sessions',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    public static resolveSession<ThrowOnError extends boolean = false>(options: Options<ResolveSessionData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<ResolveSessionResponses, unknown, ThrowOnError>({
            url: '/sessions/resolve',
            ...options
        });
    }
    
    public static setSessionAnswer<ThrowOnError extends boolean = false>(options: Options<SetSessionAnswerData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<SetSessionAnswerResponses, unknown, ThrowOnError>({
            url: '/sessions/answers/{index}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    public static finishSession<ThrowOnError extends boolean = false>(options: Options<FinishSessionData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<FinishSessionResponses, unknown, ThrowOnError>({
            url: '/sessions/finish',
            ...options
        });
    }
}

export class Quiz {
    public static listQuizes<ThrowOnError extends boolean = false>(options?: Options<ListQuizesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<ListQuizesResponses, unknown, ThrowOnError>({
            url: '/quiz',
            ...options
        });
    }
    
    public static getQuiz<ThrowOnError extends boolean = false>(options: Options<GetQuizData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetQuizResponses, GetQuizErrors, ThrowOnError>({
            url: '/quiz/{index}',
            ...options
        });
    }
}