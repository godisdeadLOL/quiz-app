// This file is auto-generated by @hey-api/openapi-ts

export type CreateQuizSession = {
    quizId: number;
};

export type QuizSessionSecure = {
    quizId: number;
    status: 'in-progress' | 'finished';
    answers: Array<Array<number>>;
    feedback?: {
        questions: Array<{
            currentAnswer: Array<number>;
            rightAnswer: Array<number>;
            comment: string;
            score: number;
            scoreMax: number;
        }>;
        score: number;
        scoreMax: number;
    };
    key: string;
};

export type QuizSessionPublic = {
    quizId: number;
    status: 'in-progress' | 'finished';
    answers: Array<Array<number>>;
    feedback?: {
        questions: Array<{
            currentAnswer: Array<number>;
            rightAnswer: Array<number>;
            comment: string;
            score: number;
            scoreMax: number;
        }>;
        score: number;
        scoreMax: number;
    };
};

export type UpdateQuestionAnswer = Array<number>;

export type QuizPreview = {
    title: string;
    description: string;
};

export type QuizPublic = {
    title: string;
    description: string;
    questions: Array<{
        description: string;
        options: Array<{
            description: string;
        }>;
        mode: 'single' | 'multiple';
        score: number;
        answer: Array<number>;
    }>;
};

export type CreateSessionData = {
    body: CreateQuizSession;
    path?: never;
    query?: never;
    url: '/sessions';
};

export type CreateSessionResponses = {
    200: QuizSessionSecure;
};

export type CreateSessionResponse = CreateSessionResponses[keyof CreateSessionResponses];

export type ResolveSessionData = {
    body?: never;
    headers: {
        'x-session-key': string;
    };
    path?: never;
    query?: never;
    url: '/sessions/resolve';
};

export type ResolveSessionResponses = {
    200: QuizSessionPublic;
};

export type ResolveSessionResponse = ResolveSessionResponses[keyof ResolveSessionResponses];

export type SetSessionAnswerData = {
    body: UpdateQuestionAnswer;
    headers: {
        'x-session-key': string;
    };
    path: {
        index: number;
    };
    query?: never;
    url: '/sessions/answers/{index}';
};

export type SetSessionAnswerResponses = {
    200: QuizSessionPublic;
};

export type SetSessionAnswerResponse = SetSessionAnswerResponses[keyof SetSessionAnswerResponses];

export type FinishSessionData = {
    body?: never;
    headers: {
        'x-session-key': string;
    };
    path?: never;
    query?: never;
    url: '/sessions/finish';
};

export type FinishSessionResponses = {
    200: QuizSessionPublic;
};

export type FinishSessionResponse = FinishSessionResponses[keyof FinishSessionResponses];

export type ListQuizesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/quiz';
};

export type ListQuizesResponses = {
    200: Array<QuizPreview>;
};

export type ListQuizesResponse = ListQuizesResponses[keyof ListQuizesResponses];

export type GetQuizData = {
    body?: never;
    path: {
        index: number;
    };
    query?: never;
    url: '/quiz/{index}';
};

export type GetQuizErrors = {
    /**
     * Quiz not found
     */
    404: unknown;
};

export type GetQuizResponses = {
    200: QuizPublic;
};

export type GetQuizResponse = GetQuizResponses[keyof GetQuizResponses];

export type ClientOptions = {
    baseUrl: string;
};